extends layout
block content
    header#fh5co-header.fh5co-cover(role='banner', style='background-image:url(images/img_bg_1.jpg);')
      .overlay
      .container
        .row
          .col-md-12.col-md-offset-0.text-center
            .display-t
              .display-tc.animate-box(data-animate-effect='fadeInUp')
                h1.mb30 Making the world a better place
    #fh5co-contact
      .container
        .row
          .col-md-offset-2.col-md-8.animate-box
            #editAlertBox
        .row
          .col-md-offset-2.col-md-8.animate-box
            form#edit-entry-form(action='/collection/'+entry._id, method='PUT')
              h3 Details
              fieldset
                .row.form-group
                  .col-md-12
                    label(for='thesis') Thesis Title
                      span  *
                    input#search.form-control(type='text', name='thesis', placeholder='Your thesis title', required='', value='#{entry.thesis}')
                .row.form-group
                  .col-md-12
                    label(for='subtitle') Subtitle
                    input.form-control(type='text', name='subtitle', placeholder='Thesis subtitle', value='#{entry.subtitle}')
                .row.form-group
                  .col-md-12
                    label(for='year') Year
                      span  *
                    select#year.form-control(name='year')
                      - var year = entry.year
                      - for (var i=year+3; i>year-3; i--)
                        - if (i == year)
                          option(value='#{i}', selected) #{i}
                        - else
                          option(value='#{i}') #{i}
                .row.form-group
                  .col-md-12
                    label(for='description') Short Description
                      span  *
                    textarea#message.form-control(name='description', cols='30', rows='10', placeholder='Say something about your thesis', required='') #{entry.description}
                .row.form-group
                  .col-md-12
                    label(for='tags') Tags
                      span  * &nbsp; &nbsp;
                    input#tags(name='tags', data-role='tagsinput', placeholder='Enter keywords', required='', value='#{entry.tags}')
              h3 People
              fieldset
                .row.form-group
                  .col-md-12
                    h2 Researchers:
                  .col-md-12
                    label(for='member1') 1st Member
                      span  *
                    input.form-control(type='text', name='member1', placeholder='Researcher 1 (First name  Last name) *', required='', value='#{entry.members[0]}')
                  .col-md-12
                    label(for='member2') 2nd Member
                      span  *
                    input.form-control(type='text', name='member2', placeholder='Researcher 2 (First name  Last name) *', required='', value='#{entry.members[1]}')
                  .col-md-12
                    label(for='member3') 3rd Member
                    input.form-control(type='text', name='member3', placeholder='Researcher 3 (First name  Last name)', value='#{entry.members[2]}')
                  .col-md-12
                    label(for='member4') 4th Member
                    input.form-control(type='text', name='member4', placeholder='Researcher 4 (First name  Last name)', value='#{entry.members[3]}')
                  .col-md-12
                    label(for='member5') 5th Member
                    input.form-control(type='text', name='member5', placeholder='Researcher 5 (First name  Last name)', value='#{entry.members[4]}')
                .row.form-group
                  .col-md-12
                    h2 Advisers:
                  .col-md-12
                    label(for='adviser1') Adviser
                      span  *
                    input.form-control(type='text', name='adviser1', placeholder="Adviser's name (First name Last name)", required='', value='#{entry.advisers[0]}')
                  .col-md-12
                    label(for='adviser2') Adviser
                      span  *                     
                    input.form-control(type='text', name='adviser2', placeholder="Adviser's name (First name Last name)", required='', value='#{entry.advisers[1]}')
              h3 File & Links
              fieldset
                .row.form-group
                  .col-md-12
                    h2 Thesis File:
                    label(for='files') Document (docx, doc, pdf) (Max. size: 15MB)
                      span  *
                    input.btn.btn-info.filepicker(type="button", value='Upload file', data-doc-url='#{entry.fileURL}')
                    label#fileUploaded(style='display:inline')
                      if entry.fileHandle != ''
                        a#fileLink(href='#' type='button' data-doc-handle='#{entry.fileHandle}' onclick='viewFile()') View File
                .row.form-group
                  .col-md-12
                    h2 Links:
                  .col-md-12
                    label(for='image') Images
                    input.form-control(type='url', name='image1', placeholder='Thesis image link (eg. https://postimage.org/yourimage.jpg)', value='#{entry.images[0]}')
                    input.form-control(type='url', name='image2', placeholder='Thesis image link (eg. https://postimage.org/yourimage.jpg)', value='#{entry.images[1]}')
                    input.form-control(type='url', name='image3', placeholder='Thesis image link (eg. https://postimage.org/yourimage.jpg)', value='#{entry.images[2]}')
                  .col-md-12
                    label(for='youtube') Youtube
                    input.form-control(type='url', name='youtube', placeholder='Thesis Youtube link (eg. https://youtube.com/yourvideo)', value='#{entry.youtube}')
              h3 Finish
              fieldset
                .row.form-group
                  .col-md-12
                    h2 Terms and Conditions:
                    input(name='department', value='#{entry.department}', type='hidden')
                  .col-md-offset-2.col-md-9
                    label(for='acceptTerms-2')
                      span By submitting, you certify that the information provided are true and correct. Also, you approve viewing and distribution of the file uploaded.

block scripts
    script(src='/javascripts/tagsInput/bootstrap-tagsinput.js')
    script(src='/javascripts/jqueryValidation/jquery.validate.js')
    script(src='/javascripts/jqueryValidation/additional-methods.js')
    script(src='/javascripts/formWizard/jquery.steps.js')
    script(type='text/javascript').

      var myDate = new Date();
      var currentyear = myDate.getFullYear();
      var mimeType = '';
      var form = $("#edit-entry-form").show();
      form.steps({
        headerTag: "h3",
        bodyTag: "fieldset",
        transitionEffect: "slideLeft",
        onStepChanging: function (event, currentIndex, newIndex){
          // Allways allow previous action even if the current form is not valid!
          if (currentIndex > newIndex){
            return true;
          }
          // Needed in some cases if the user went back (clean up)
          if (currentIndex < newIndex){
            // To remove error styles
            form.find(".body:eq(" + newIndex + ") label.error").remove();
            form.find(".body:eq(" + newIndex + ") .error").removeClass("error");
          }
          form.validate().settings.ignore = ":disabled,:hidden";
          return form.valid();
        },
        onStepChanged: function (event, currentIndex, priorIndex){
        
        },
        onFinishing: function (event, currentIndex){
          form.validate().settings.ignore = ":disabled";
          return form.valid();
        },
        onFinished: function (event, currentIndex){
          var form = $(this);
          form.submit();
        }
      }).validate({
        errorPlacement: function errorPlacement(error, element) { element.before(error); },
        rules: {
          thesis : "required",
          description : "required",
          year : { range : [currentyear-6, currentyear], date: true },
          tags : "required",
          member1 : "required",
          member2 : "required",
          adviser1 : "required",
          adviser2 : "required",
          files : {
            required : true,
            extension : "docx|doc|pdf"
          },
          image1 : { url : true },
          image2 : { url : true },
          image3 : { url : true },
          youtube : { url : true }
        },
        messages : {
          files : {
            required : "This field is required",
            extension : "Please enter a value with a valid mimetype"
          }
        }
      });

      $('.filepicker').on('click', function(event){
        var _this = $(this);       
        filepicker.pick(
          {
            extension: ['.pdf', '.doc', '.docx'],
            container: 'modal',
            service: ['COMPUTER'],
            openTo: 'COMPUTER' 
          },
          function(Blob){
            console.log(JSON.stringify(Blob));
            _this.data("doc-url", Blob.url);
            _this.data("doc-mimetype", Blob.mimetype);
            // Generate file handle
            var lastIndex = Blob.url.lastIndexOf('/');
            if(lastIndex != -1){
              mimeType = Blob.mimetype;
              var fileHandle = Blob.url.substring(lastIndex+1, Blob.url.length);
              $('#fileUploaded').html("<a id='fileLink' href='https://process.filestackapi.com/output=s:true/"+Blob.url+"' data-doc-mimetype='"+mimeType+"' data-doc-handle='"+fileHandle+"' target='_window'>View File</a>");
            } else {
              mimeType = '';
              var fileHandle = '';
              $('#fileUploaded').html("<span>No file uploaded.</span>");
            }
          },
          function(FPError){
            console.log(FPError.toString());
          }
        );
      });

      $('#edit-entry-form').on('submit', function(e){
        e.preventDefault();
        var href = document.getElementById('edit-entry-form').getAttribute('action');
        var type = document.getElementById('edit-entry-form').getAttribute('method');
        var tags = $("#tags").tagsinput('items');
        var thesis = document.querySelector('[name="thesis"]').value;
        var subtitle = document.querySelector('[name="subtitle"]').value;
        var year = document.querySelector('[name="year"]').value;
        var description = document.querySelector('[name="description"]').value;
        var member1 = document.querySelector('[name="member1"]').value;
        var member2 = document.querySelector('[name="member2"]').value;
        var member3 = document.querySelector('[name="member3"]').value;
        var member4 = document.querySelector('[name="member4"]').value;
        var member5 = document.querySelector('[name="member5"]').value;
        var adviser1 = document.querySelector('[name="adviser1"]').value;
        var adviser2 = document.querySelector('[name="adviser2"]').value;
        var fileURL = $('.filepicker').data('doc-url');
        var fileType = $('.filepicker').data('doc-mimetype');
        var image1 = document.querySelector('[name="image1"]').value;
        var image2 = document.querySelector('[name="image2"]').value;
        var image3 = document.querySelector('[name="image3"]').value;
        var youtube = document.querySelector('[name="youtube"]').value;
        var department = document.querySelector('[name="department"]').value;

        if(fileURL === undefined){
          fileURL = '';
        }

        // Generate file handle
        var lastIndex = fileURL.lastIndexOf('/');
        if(lastIndex != -1){
          var fileHandle = fileURL.substring(lastIndex+1, fileURL.length);
        } else {
          var fileHandle = '';
        }

        var data = {
          "department" : department,
          "thesis" : thesis,
          "subtitle" : subtitle,
          "description" : description,
          "year" : year,
          "tags" : JSON.stringify(tags),
          "member1" : member1,
          "member2" : member2,
          "member3" : member3,
          "member4" : member4,
          "member5" : member5,
          "adviser1" : adviser1,
          "adviser2" : adviser2,
          "fileURL" : fileURL,
          "fileHandle" : fileHandle,
          "fileType" : fileType,
          "image1" : image1,
          "image2" : image2,
          "image3" : image3,
          "youtube" : youtube
        }
        console.log(data);

        $.ajax({
          url: href,
          type: type,
          dataType: 'json',
          data: data
        }).done(function(res){
          document.getElementById('edit-entry-form').reset();
          $("#edit-entry-form").steps('reset');
          $('#fileUploaded').html("");
          $('.filepicker').data('doc-url', '');
          $("#tags").tagsinput('destroy');
          $("#tags").tagsinput('refresh');
          $('#editAlertBox').html("<div class='alert alert-success alert-dismissable'><i class='icon-check' style='font-size:15px; text-align:center'></i> <strong>"+res.message+"</strong></div>");
          setTimeout(function() {
            window.location.href = res.redirect;
          }, 5000);
        }).fail(function(res){
          alert(res.message);
          $('#editAlertBox').html("<div class='alert alert-danger alert-dismissable'><i class='icon-cross2' style='font-size:15px'></i> <strong>Error sending request to add entry! "+res.message+"</strong></div>");
        }); 
      });
